-- Equipo 1

-- BORRADO DE TABLAS
DROP TABLE competiciones CASCADE CONSTRAINTS;
DROP TABLE jornadas CASCADE CONSTRAINTS;
DROP TABLE equipos CASCADE CONSTRAINTS;
DROP TABLE jugadores CASCADE CONSTRAINTS;
DROP TABLE enfrentamientos CASCADE CONSTRAINTS;
DROP TABLE usuarios CASCADE CONSTRAINTS;

-- CREACION DE TABLAS
<<<<<<< Updated upstream
CREATE TABLE competiciones (
    cod_comp NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT comp_cod_pk PRIMARY KEY,
    fechaInicio DATE NOT NULL,
    fechaFin DATE NOT NULL,
    estado VARCHAR(10) CHECK(estado IN('activo', 'inactivo'))
);

CREATE TABLE jornadas (
    cod_jornada NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT jor_cod_pk PRIMARY KEY,
    fecha DATE NOT NULL,
    CONSTRAINT jor_codComp_fk FOREIGN KEY (cod_jornada) -- Competicion
        REFERENCES competiciones(cod_comp)
);

CREATE TABLE equipos (
    cod_equipo NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
=======

CREATE TABLE usuarios (
    id NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
        CONSTRAINT user_id_pk PRIMARY KEY,
    email VARCHAR2(255) NOT NULL,
    password VARCHAR2(255) NOT NULL,
    tipo VARCHAR2(5) CHECK(tipo IN('admin', 'user')) NOT NULL,
    
    CONSTRAINT user_email_unique UNIQUE (email)--Cada email es unico

);

CREATE TABLE equipos (
    cod_equipo NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
>>>>>>> Stashed changes
        CONSTRAINT equi_cod_pk PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL,
    fechaFundacion DATE NOT NULL,
    CONSTRAINT equi_nombre_uk UNIQUE (nombre)--Cada equipo es unico
);

CREATE TABLE jugadores (
<<<<<<< Updated upstream
    cod_jugador NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
=======
    cod_jugador NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
>>>>>>> Stashed changes
        CONSTRAINT jug_cod_pk PRIMARY KEY,
    cod_equipo NUMBER(4),
    nombre VARCHAR2(50) NOT NULL,
    apellido VARCHAR2(50) NOT NULL,
    nacionalidad VARCHAR2(50) NOT NULL,
    fechaNacimiento DATE NOT NULL,
    nickname VARCHAR2(50) NOT NULL,
    rol VARCHAR2(20) CHECK(rol IN('duelista', 'iniciador', 'centinela', 
        'controlador')) NOT NULL,
    sueldo NUMBER(7, 2) NOT NULL,
<<<<<<< Updated upstream
    cod_equipo NUMBER(4) NOT NULL,
    CONSTRAINT jug_codEqui_fk FOREIGN KEY (cod_equipo) -- Equipo
        REFERENCES equipos(cod_equipo)
);

CREATE TABLE enfrentamientos (
    cod_enfre NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT enfre_cod_pk PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL,
    fechaFundacion DATE NOT NULL,
    equipo1 NUMBER(4) NOT NULL,
    equipo2 NUMBER(4) NOT NULL,
    ganador NUMBER(4) NOT NULL,
    CONSTRAINT enfre_equipo1_fk FOREIGN KEY (equipo1) -- Equipo 1
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_equipo2_fk FOREIGN KEY (equipo2) -- Equipo 2
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_ganador_fk FOREIGN KEY (ganador) -- Ganador
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_codJor_fk FOREIGN KEY (cod_enfre) -- Jornada
        REFERENCES jornadas(cod_jornada)
);

CREATE TABLE usuarios (
    id NUMBER(4) GENERATED BY DEFAULT AS IDENTITY NOT NULL
        CONSTRAINT user_id_pk PRIMARY KEY,
    email VARCHAR2(255) NOT NULL,
    password VARCHAR2(255) NOT NULL,
    tipo VARCHAR2(5) CHECK(tipo IN('admin', 'user')) NOT NULL
=======
    CONSTRAINT jug_codEqui_fk FOREIGN KEY (cod_equipo)--Jugadores pertenecen a un Equipo
        REFERENCES equipos(cod_equipo)
);

CREATE TABLE competiciones (
    nombre varchar2(50) NOT NULL,
    cod_comp NUMBER(4) GENERATED BY DEFAULT AS IDENTITY,
    fechaInicio DATE NOT NULL,
    fechaFin DATE NOT NULL,
    estado VARCHAR(10) CHECK (estado IN ('activo', 'inactivo')),
    CONSTRAINT comp_cod_pk PRIMARY KEY (cod_comp)
);


CREATE TABLE jornadas (
    cod_jornada NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
        CONSTRAINT jor_cod_pk PRIMARY KEY,
    cod_comp NUMBER(4) NOT NULL,
    fecha DATE NOT NULL,
    CONSTRAINT jor_codComp_fk 
        FOREIGN KEY (cod_comp)--Las jornadas tienen competiciones
        REFERENCES competiciones(cod_comp)
>>>>>>> Stashed changes
);





/*
Agregamos columnas: cod_equipo1, cod_equipo2, cod_ganador, cod_jornada.

Añadimos restricciones CHECK para que:

los dos equipos no sean iguales.

el ganador solo pueda ser uno de los equipos enfrentados o 
quedar nulo (empate o aún no decidido).
*/
CREATE TABLE enfrentamientos (
    cod_enfre NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
        CONSTRAINT enfre_cod_pk PRIMARY KEY,
    cod_equipo1 NUMBER(4) NOT NULL,
    cod_equipo2 NUMBER(4) NOT NULL,
    cod_ganador NUMBER(4),
    cod_jornada NUMBER(4) NOT NULL,
    hora DATE NOT NULL,

    CONSTRAINT enfre_equipo1_fk FOREIGN KEY (cod_equipo1)
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_equipo2_fk FOREIGN KEY (cod_equipo2)
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_ganador_fk FOREIGN KEY (cod_ganador)
        REFERENCES equipos(cod_equipo),
    CONSTRAINT enfre_jornada_fk FOREIGN KEY (cod_jornada)
        REFERENCES jornadas(cod_jornada),
    
    CONSTRAINT enfre_equipos_distintos CHECK (cod_equipo1 != cod_equipo2),
    CONSTRAINT enfre_ganador_valido CHECK (
        cod_ganador IN (cod_equipo1, cod_equipo2) OR cod_ganador IS NULL
    )
);
  
/*
MER:
jugadores(cod_jugador [pk],cod_equipo[fk],nombre,apellido,nacionalidad,fecha_nacimiento,rol[ck],sueldo)

equipos(cod_equipo[pk],nombre[unique],fecha_fundacion)

enfrentamientos(cod_enfre[pk],cod_jornada[fk],cod_equipo1[fk],cod_equipo2[fk]
,cod_ganador[fk],fecha,hora)

jornadas(cod_jornada[pk], cod_competicion[fk],fecha)

competiciones(cod_competicion[pk],nombre,fecha_inicio,fecha_fin,estado[ck(activo,inactivo)])

*/